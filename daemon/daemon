#!/usr/bin/env python3
from http import client
import socket
import struct
import sys
import time

settings = {
    'port': 12345,
    'bind_addr': '0.0.0.0',
    'http_hostname': None,
    'http_port': None,
}

def serve(s):
    s.setblocking(False)
    http_c = client.HTTPConnection(
        settings['http_hostname'],
        settings['http_port'],
    )
    while True:
        http_c.request('GET', '/screencount')
        count = int(http_c.getresponse().read())

        if count == 0:
            count = 1

        for screen_id in range(count):
            print('Fetch screen dump %d' % screen_id)
            http_c.request('GET', '/screendump/%d' % screen_id)
            r = http_c.getresponse()
            dump = r.read()
            dump = struct.pack('B', screen_id) + dump

            print('Sending screen dump')
            print(dump)
            try:
                s.send(dump)
            except:
                s.close()
                return
        time.sleep(1)
        # Read from socket

def main():
    # Access to the web server
    settings['http_hostname'] = sys.argv[1]
    settings['http_port'] = int(sys.argv[2])

    # Server socket
    srvsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    srvsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    srvsock.bind(('0.0.0.0', 12345))
    srvsock.listen(1)


    while True:
        (s, addr) = srvsock.accept()
        print('Connection accepted')
        serve(s)


if __name__ == '__main__':
    main()
